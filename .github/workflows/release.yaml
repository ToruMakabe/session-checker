name: Release

on:
  push:
    tags:
    - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04

    steps:
      - name: "Prepare"
        id: prep
        run: |
          if [[ ${{ github.event_name }} == 'workflow_dispatch' ]]; then
            TAG=test
          else
            TAG=$(echo ${GITHUB_REF} | awk -F '/' '{print $3}')
          fi
          REPO_NAME=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')
          echo ::set-output name=tag::${TAG}
          echo ::set-output name=repo_name::${REPO_NAME}

      - name: "Go Setup"
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "GoReleaser"
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "QEMU Setup"
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: "Docker buildx Setup"
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: "Registry Login"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PAT }}

      - name: "Build & Publish"
        uses: docker/build-push-action@v3
        with:
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ secrets.REGISTRY_USERNAME }}/${{ steps.prep.outputs.repo_name }}:${{ steps.prep.outputs.tag }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
